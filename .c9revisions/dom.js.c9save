{"ts":1343592191428,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\r\n    dom.js - \r\n        a. $(document).ready(functionName);\r\n        b. Selectors \r\n            1) ID - $('#id')\r\n            2) Class - $('.class')\r\n            3) Tag Name(s) - $('div') or $('div,a,pre,span...')\r\n        c. CSS \r\n            1) css('attributeName'), returns the value of the given css style attribute\r\n        d. HTML\r\n            1) attr('attributeName'), returns the value of the given html tag attribute\r\n*/\r\nvar $ = function (param) {   \r\n    //\"use strict\"; //This made it sow when window became ready, $'s contents became undefined??? wierd\r\n    var\r\n        validHtmlTags = ['button', 'input', 'form', 'label', 'article', 'p', 'div', 'header', 'nav', 'ul', \r\n                         'li', 'a', 'span', 'section', 'body', 'html', 'head', 'h2', 'h1', 'h3', 'h4', 'h5', \r\n                         'dd', 'dl', 'table', 'pre', 'hr'],\r\n        id,\r\n        className,\r\n        isValidTag,\r\n        documentReady = false;\r\n\r\n    //When window is fully loaded, run the callback\r\n    if (param === document) { //Looking for DOM object\r\n        document.ready = function (callback) {\r\n            console.log('loading');\r\n            console.log(callback);\r\n            \r\n            if(document.readyState === \"complete\") {\r\n                  console.log('already complete');\r\n                  documentReady = true;\r\n                  console.log(typeof(callback));\r\n                  console.log(callback);\r\n                  callback();\r\n            } else {\r\n              console.log('else');\r\n              //window.addEventListener(\"onload\",callback, false); //IE\r\n              document.addEventListener(\"DOMContentLoaded\", callback, false); //firefox, chrome\r\n            }\r\n        };\r\n        document.htmlElementsList = [];\r\n        return document;\r\n    }\r\n    \r\n    if(this === undefined) {\r\n        console.log('failure');\r\n        return;\r\n    }\r\n    this.htmlElementsList = [];\r\n\r\n    //This allows $ to be chainable, by adding the $ functions to the array object of DOM elements\r\n\tthis.ret = function () {\r\n\t\tthis.htmlElementsList.htmlElementsList = this.htmlElementsList;\r\n\t\tthis.htmlElementsList.hide = this.hide;\r\n\t\tthis.htmlElementsList.attr = this.attr;\r\n\t\tthis.htmlElementsList.css = this.css;\r\n\t\tthis.htmlElementsList.ret = this.ret;\r\n\t\tthis.htmlElementsList.show = this.show;\r\n\t\treturn this.htmlElementsList;\r\n\t};\r\n    \r\n    /*\r\n        DOM read / write functionality\r\n    */\r\n\tthis.show = function () {\r\n\t\tvar i = 0;\r\n\t\tfor (i; i < this.htmlElementsList.length; i++) {\r\n\t\t\tthis.htmlElementsList[i].style.display = 'block';\r\n\t\t}\r\n\t\treturn this.ret();\r\n\t};\r\n\tthis.hide = function () {\r\n\t\tvar i = 0;\r\n\t\tfor (i; i < this.htmlElementsList.length; i++) {\r\n\t\t\tthis.htmlElementsList[i].style.display = 'none';\r\n\t\t}\r\n\t\treturn this.ret();\r\n\t};\r\n\tthis.attr = function (attribute, value) {\r\n\t\tif (value === undefined) {\r\n\t\t\treturn this.htmlElementsList[0].getAttribute(attribute);\r\n\t\t}\r\n\t\treturn this.ret();\r\n\t};\r\n\tthis.css  = function (attribute, value) {\r\n\t\tif (value === undefined) {\r\n\t\t\treturn this.htmlElementsList[0].style[attribute];\r\n\t\t}\r\n\t\treturn this.ret();\r\n\t};\r\n    \r\n    /*\r\n        Selector Engine\r\n    */\r\n\tif (typeof (param) === 'string') {\r\n\t\t//run css selector engine\r\n\t\tif (param.charAt(0) === '#') { //Looking for an id, eg: $('#container')\r\n\t\t\tconsole.log('id');\r\n\t\t\tid = param.substr(1, param.length);\r\n\t\t\tthis.htmlElementsList = document.getElementById(id);\r\n\t\t} else if (param.charAt(0) === '.') { //Looking for class, eg: $('.current')\r\n\t\t\tconsole.log('class');\r\n\t\t\tclassName = param.substr(1, param.length);\r\n\t\t\tthis.htmlElementsList = document.getElementsByClassName(className);\r\n\t\t\tconsole.log(className);\r\n\t\t\tconsole.log('aok for class');\r\n\t\t} else { //Looking for tag, or tags, eg: $('div') or $('a,span,p')\r\n\t\t\tisValidTag = false;\r\n            var tempList = [];\r\n            var paramTags = param.split(',');\r\n            console.log(paramTags);\r\n\r\n            paramTags.forEach(function (v, i, a) { //Loop through parameter tags\r\n                validHtmlTags.forEach(function (value, index, array) { //loop through list of valid tags\r\n                    if(value === v) { //&& i > 0) {\r\n                        var el = document.getElementsByTagName(v);\r\n                        if(el.length > 0) {\r\n                            for(var n = 0; n < el.length; n++) {  //Loop through dom elements of ith parameter tag, add to tempList\r\n                                tempList[tempList.length] = el[n];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n                });                \r\n            });\r\n            \r\n            this.htmlElementsList = tempList;\r\n\t\t\tconsole.log('tag');\r\n\t\t\tconsole.log('aok for tags');\r\n\t\t}\r\n\t}\r\n    \r\n\treturn this.ret();\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":4826}]],"length":4826}
{"ts":1343592500242,"patch":[[{"diffs":[[0,"te\r\n*/\r\n"],[1,"var $$ = function (param) {\r\n}\r\n\r\n"],[0,"var $ = "]],"start1":426,"start2":426,"length1":16,"length2":50}]],"length":4860,"saved":false}
{"ts":1343592501104,"patch":[[{"diffs":[[0,"ram) {\r\n"],[1,"\r\n"],[0,"}\r\n\r\nvar"]],"start1":455,"start2":455,"length1":16,"length2":18}]],"length":4862,"saved":false}
{"ts":1343592503270,"patch":[[{"diffs":[[0,") {\r\n\r\n}"],[1,";"],[0,"\r\n\r\nvar "]],"start1":458,"start2":458,"length1":16,"length2":17}]],"length":4863,"saved":false}
{"ts":1343592504180,"patch":[[{"diffs":[[0,"ram) {\r\n"],[1,"    "],[0,"\r\n};\r\n\r\n"]],"start1":455,"start2":455,"length1":16,"length2":20}]],"length":4867,"saved":false}
